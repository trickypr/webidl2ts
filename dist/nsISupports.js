"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nsISupportsString = void 0;
/**
 * This is the root component for everything in xpcom / Gecko. To save on time, I am going to
 * add it to every file
 */
exports.nsISupportsString = "\n\n/**\n\t* ID object\n*/\ntypedef object nsIIDRef;\n\ntypedef object nsQIResult;\n\ntypedef number MozExternalRefCountType;\n\n\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/**\n * The mother of all xpcom interfaces.\n */\n\n\n/**\n * Basic component object model interface. Objects which implement\n * this interface support runtime interface discovery (QueryInterface)\n * and a reference counted memory model (AddRef/Release). This is\n * modelled after the win32 IUnknown API.\n *\n * Historically, nsISupports needed to be binary compatible with COM's\n * IUnknown, so the IID of nsISupports is the same as it. That is no\n * longer a goal, and hopefully nobody depends on it. We may break\n * this compatibility at any time.\n */\n[scriptable]\ninterface nsISupports {\n\n  /**\n   * A run time mechanism for interface discovery.\n   * @param aIID [in] A requested interface IID\n   * @param aInstancePtr [out] A pointer to an interface pointer to\n   * receive the result.\n   * @return <b>NS_OK</b> if the interface is supported by the associated\n   * instance, <b>NS_NOINTERFACE</b> if it is not.\n   *\n   * aInstancePtr must not be null.\n   */\n  void QueryInterface(nsIIDRef aIID,\n                      [retval] nsQIResult aInstancePtr);\n\n  /**\n   * Increases the reference count for this interface.\n   * The associated instance will not be deleted unless\n   * the reference count is returned to zero.\n   *\n   * @return The resulting reference count.\n   */\n  [noscript, notxpcom] MozExternalRefCountType AddRef();\n\n  /**\n   * Decreases the reference count for this interface.\n   * Generally, if the reference count returns to zero,\n   * the associated instance is deleted.\n   *\n   * @return The resulting reference count.\n   */\n  [noscript, notxpcom] MozExternalRefCountType Release();\n};";
